<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="454" onload="init(evt)" viewBox="0 0 1200 454" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="454" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="437.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="437.00"> </text><svg id="frames" x="10" width="1180" total_samples="48095"><g><title>cloud-gateway`std::sys::pal::unix::time::Timespec::now (8 samples, 0.02%)</title><rect x="0.0104%" y="229" width="0.0166%" height="15" fill="rgb(227,0,7)" fg:x="5" fg:w="8"/><text x="0.2604%" y="239.50"></text></g><g><title>cloud-gateway`tokio::runtime::scheduler::multi_thread::idle::Idle::transition_worker_to_parked (13 samples, 0.03%)</title><rect x="0.0291%" y="229" width="0.0270%" height="15" fill="rgb(217,0,24)" fg:x="14" fg:w="13"/><text x="0.2791%" y="239.50"></text></g><g><title>cloud-gateway`tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into (19 samples, 0.04%)</title><rect x="0.0561%" y="229" width="0.0395%" height="15" fill="rgb(221,193,54)" fg:x="27" fg:w="19"/><text x="0.3061%" y="239.50"></text></g><g><title>cloud-gateway`tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (8 samples, 0.02%)</title><rect x="0.0956%" y="229" width="0.0166%" height="15" fill="rgb(248,212,6)" fg:x="46" fg:w="8"/><text x="0.3456%" y="239.50"></text></g><g><title>cloud-gateway`DYLD-STUB$$clock_gettime (9 samples, 0.02%)</title><rect x="1.1145%" y="213" width="0.0187%" height="15" fill="rgb(208,68,35)" fg:x="536" fg:w="9"/><text x="1.3645%" y="223.50"></text></g><g><title>cloud-gateway`parking_lot::raw_mutex::RawMutex::lock_slow (7 samples, 0.01%)</title><rect x="1.1373%" y="213" width="0.0146%" height="15" fill="rgb(232,128,0)" fg:x="547" fg:w="7"/><text x="1.3873%" y="223.50"></text></g><g><title>libsystem_c.dylib`DYLD-STUB$$mach_timebase_info (6 samples, 0.01%)</title><rect x="1.1768%" y="181" width="0.0125%" height="15" fill="rgb(207,160,47)" fg:x="566" fg:w="6"/><text x="1.4268%" y="191.50"></text></g><g><title>libsystem_c.dylib`clock_gettime_nsec_np (56 samples, 0.12%)</title><rect x="1.1893%" y="181" width="0.1164%" height="15" fill="rgb(228,23,34)" fg:x="572" fg:w="56"/><text x="1.4393%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`mach_timebase_info (41 samples, 0.09%)</title><rect x="1.2205%" y="165" width="0.0852%" height="15" fill="rgb(218,30,26)" fg:x="587" fg:w="41"/><text x="1.4705%" y="175.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (532 samples, 1.11%)</title><rect x="1.3057%" y="181" width="1.1061%" height="15" fill="rgb(220,122,19)" fg:x="628" fg:w="532"/><text x="1.5557%" y="191.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (613 samples, 1.27%)</title><rect x="1.1581%" y="197" width="1.2746%" height="15" fill="rgb(250,228,42)" fg:x="557" fg:w="613"/><text x="1.4081%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`mach_timebase_info (10 samples, 0.02%)</title><rect x="2.4119%" y="181" width="0.0208%" height="15" fill="rgb(240,193,28)" fg:x="1160" fg:w="10"/><text x="2.6619%" y="191.50"></text></g><g><title>cloud-gateway`std::sys::pal::unix::time::Timespec::now (625 samples, 1.30%)</title><rect x="1.1540%" y="213" width="1.2995%" height="15" fill="rgb(216,20,37)" fg:x="555" fg:w="625"/><text x="1.4040%" y="223.50"></text></g><g><title>libsystem_c.dylib`clock_gettime_nsec_np (10 samples, 0.02%)</title><rect x="2.4327%" y="197" width="0.0208%" height="15" fill="rgb(206,188,39)" fg:x="1170" fg:w="10"/><text x="2.6827%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`swtch_pri (12 samples, 0.02%)</title><rect x="2.5491%" y="181" width="0.0250%" height="15" fill="rgb(217,207,13)" fg:x="1226" fg:w="12"/><text x="2.7991%" y="191.50"></text></g><g><title>cloud-gateway`tokio::runtime::scheduler::multi_thread::idle::Idle::transition_worker_to_parked (59 samples, 0.12%)</title><rect x="2.4535%" y="213" width="0.1227%" height="15" fill="rgb(231,73,38)" fg:x="1180" fg:w="59"/><text x="2.7035%" y="223.50"></text></g><g><title>cloud-gateway`parking_lot::raw_mutex::RawMutex::lock_slow (20 samples, 0.04%)</title><rect x="2.5346%" y="197" width="0.0416%" height="15" fill="rgb(225,20,46)" fg:x="1219" fg:w="20"/><text x="2.7846%" y="207.50"></text></g><g><title>cloud-gateway`tokio::runtime::scheduler::multi_thread::idle::Idle::unpark_worker_by_id (31 samples, 0.06%)</title><rect x="2.5762%" y="213" width="0.0645%" height="15" fill="rgb(210,31,41)" fg:x="1239" fg:w="31"/><text x="2.8262%" y="223.50"></text></g><g><title>cloud-gateway`tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into (225 samples, 0.47%)</title><rect x="2.6510%" y="213" width="0.4678%" height="15" fill="rgb(221,200,47)" fg:x="1275" fg:w="225"/><text x="2.9010%" y="223.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (23 samples, 0.05%)</title><rect x="3.3267%" y="165" width="0.0478%" height="15" fill="rgb(226,26,5)" fg:x="1600" fg:w="23"/><text x="3.5767%" y="175.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (23 samples, 0.05%)</title><rect x="3.3267%" y="149" width="0.0478%" height="15" fill="rgb(249,33,26)" fg:x="1600" fg:w="23"/><text x="3.5767%" y="159.50"></text></g><g><title>cloud-gateway`std::sys::pal::unix::time::Timespec::now (24 samples, 0.05%)</title><rect x="3.3267%" y="181" width="0.0499%" height="15" fill="rgb(235,183,28)" fg:x="1600" fg:w="24"/><text x="3.5767%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (262 samples, 0.54%)</title><rect x="3.3767%" y="181" width="0.5448%" height="15" fill="rgb(221,5,38)" fg:x="1624" fg:w="262"/><text x="3.6267%" y="191.50"></text></g><g><title>cloud-gateway`parking_lot::condvar::Condvar::notify_one_slow (301 samples, 0.63%)</title><rect x="3.3080%" y="197" width="0.6258%" height="15" fill="rgb(247,18,42)" fg:x="1591" fg:w="301"/><text x="3.5580%" y="207.50"></text></g><g><title>cloud-gateway`DYLD-STUB$$pthread_mutex_unlock (8 samples, 0.02%)</title><rect x="4.4766%" y="181" width="0.0166%" height="15" fill="rgb(241,131,45)" fg:x="2153" fg:w="8"/><text x="4.7266%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (3,472 samples, 7.22%)</title><rect x="4.6346%" y="165" width="7.2190%" height="15" fill="rgb(249,31,29)" fg:x="2229" fg:w="3472"/><text x="4.8846%" y="175.50">libsystem_..</text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_droplock (7 samples, 0.01%)</title><rect x="11.9035%" y="149" width="0.0146%" height="15" fill="rgb(225,111,53)" fg:x="5725" fg:w="7"/><text x="12.1535%" y="159.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (12 samples, 0.02%)</title><rect x="11.9181%" y="149" width="0.0250%" height="15" fill="rgb(238,160,17)" fg:x="5732" fg:w="12"/><text x="12.1681%" y="159.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (12 samples, 0.02%)</title><rect x="11.9181%" y="133" width="0.0250%" height="15" fill="rgb(214,148,48)" fg:x="5732" fg:w="12"/><text x="12.1681%" y="143.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (5 samples, 0.01%)</title><rect x="11.9430%" y="149" width="0.0104%" height="15" fill="rgb(232,36,49)" fg:x="5744" fg:w="5"/><text x="12.1930%" y="159.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_cond_wait (54 samples, 0.11%)</title><rect x="11.8578%" y="165" width="0.1123%" height="15" fill="rgb(209,103,24)" fg:x="5703" fg:w="54"/><text x="12.1078%" y="175.50"></text></g><g><title>libsystem_pthread.dylib`pthread_testcancel (8 samples, 0.02%)</title><rect x="11.9534%" y="149" width="0.0166%" height="15" fill="rgb(229,88,8)" fg:x="5749" fg:w="8"/><text x="12.2034%" y="159.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (9 samples, 0.02%)</title><rect x="11.9701%" y="165" width="0.0187%" height="15" fill="rgb(213,181,19)" fg:x="5757" fg:w="9"/><text x="12.2201%" y="175.50"></text></g><g><title>cloud-gateway`parking_lot::condvar::Condvar::wait_until_internal (3,619 samples, 7.52%)</title><rect x="4.4932%" y="181" width="7.5247%" height="15" fill="rgb(254,191,54)" fg:x="2161" fg:w="3619"/><text x="4.7432%" y="191.50">cloud-gate..</text></g><g><title>libsystem_pthread.dylib`pthread_testcancel (10 samples, 0.02%)</title><rect x="11.9971%" y="165" width="0.0208%" height="15" fill="rgb(241,83,37)" fg:x="5770" fg:w="10"/><text x="12.2471%" y="175.50"></text></g><g><title>cloud-gateway`tokio::runtime::signal::Driver::process (5 samples, 0.01%)</title><rect x="12.0304%" y="181" width="0.0104%" height="15" fill="rgb(233,36,39)" fg:x="5786" fg:w="5"/><text x="12.2804%" y="191.50"></text></g><g><title>cloud-gateway`&lt;mio::event::events::Iter as core::iter::traits::iterator::Iterator&gt;::next (22 samples, 0.05%)</title><rect x="12.2133%" y="165" width="0.0457%" height="15" fill="rgb(226,3,54)" fg:x="5874" fg:w="22"/><text x="12.4633%" y="175.50"></text></g><g><title>cloud-gateway`mio::poll::Poll::poll (5 samples, 0.01%)</title><rect x="12.2591%" y="165" width="0.0104%" height="15" fill="rgb(245,192,40)" fg:x="5896" fg:w="5"/><text x="12.5091%" y="175.50"></text></g><g><title>cloud-gateway`tokio::process::imp::orphan::OrphanQueueImpl&lt;T&gt;::reap_orphans (47 samples, 0.10%)</title><rect x="12.2799%" y="165" width="0.0977%" height="15" fill="rgb(238,167,29)" fg:x="5906" fg:w="47"/><text x="12.5299%" y="175.50"></text></g><g><title>cloud-gateway`mio::poll::Poll::poll (10 samples, 0.02%)</title><rect x="12.4857%" y="149" width="0.0208%" height="15" fill="rgb(232,182,51)" fg:x="6005" fg:w="10"/><text x="12.7357%" y="159.50"></text></g><g><title>cloud-gateway`tokio::runtime::task::raw::schedule (8 samples, 0.02%)</title><rect x="12.7643%" y="133" width="0.0166%" height="15" fill="rgb(231,60,39)" fg:x="6139" fg:w="8"/><text x="13.0143%" y="143.50"></text></g><g><title>cloud-gateway`tokio::runtime::context::with_scheduler (69 samples, 0.14%)</title><rect x="12.7976%" y="101" width="0.1435%" height="15" fill="rgb(208,69,12)" fg:x="6155" fg:w="69"/><text x="13.0476%" y="111.50"></text></g><g><title>cloud-gateway`tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_local (28 samples, 0.06%)</title><rect x="12.8828%" y="85" width="0.0582%" height="15" fill="rgb(235,93,37)" fg:x="6196" fg:w="28"/><text x="13.1328%" y="95.50"></text></g><g><title>cloud-gateway`tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::schedule (83 samples, 0.17%)</title><rect x="12.7934%" y="117" width="0.1726%" height="15" fill="rgb(213,116,39)" fg:x="6153" fg:w="83"/><text x="13.0434%" y="127.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (12 samples, 0.02%)</title><rect x="12.9411%" y="101" width="0.0250%" height="15" fill="rgb(222,207,29)" fg:x="6224" fg:w="12"/><text x="13.1911%" y="111.50"></text></g><g><title>cloud-gateway`tokio::runtime::io::scheduled_io::ScheduledIo::wake (230 samples, 0.48%)</title><rect x="12.5065%" y="149" width="0.4782%" height="15" fill="rgb(206,96,30)" fg:x="6015" fg:w="230"/><text x="12.7565%" y="159.50"></text></g><g><title>cloud-gateway`tokio::runtime::task::waker::wake_by_val (98 samples, 0.20%)</title><rect x="12.7810%" y="133" width="0.2038%" height="15" fill="rgb(218,138,4)" fg:x="6147" fg:w="98"/><text x="13.0310%" y="143.50"></text></g><g><title>cloud-gateway`tokio::runtime::task::state::State::transition_to_notified_by_val (9 samples, 0.02%)</title><rect x="12.9660%" y="117" width="0.0187%" height="15" fill="rgb(250,191,14)" fg:x="6236" fg:w="9"/><text x="13.2160%" y="127.50"></text></g><g><title>cloud-gateway`tokio::runtime::task::waker::wake_by_val (7 samples, 0.01%)</title><rect x="12.9847%" y="149" width="0.0146%" height="15" fill="rgb(239,60,40)" fg:x="6245" fg:w="7"/><text x="13.2347%" y="159.50"></text></g><g><title>cloud-gateway`tokio::runtime::io::driver::Driver::turn (3,994 samples, 8.30%)</title><rect x="12.3776%" y="165" width="8.3044%" height="15" fill="rgb(206,27,48)" fg:x="5953" fg:w="3994"/><text x="12.6276%" y="175.50">cloud-gatewa..</text></g><g><title>libsystem_kernel.dylib`kevent (3,695 samples, 7.68%)</title><rect x="12.9993%" y="149" width="7.6827%" height="15" fill="rgb(225,35,8)" fg:x="6252" fg:w="3695"/><text x="13.2493%" y="159.50">libsystem_k..</text></g><g><title>cloud-gateway`tokio::runtime::io::scheduled_io::ScheduledIo::wake (8 samples, 0.02%)</title><rect x="20.6820%" y="165" width="0.0166%" height="15" fill="rgb(250,213,24)" fg:x="9947" fg:w="8"/><text x="20.9320%" y="175.50"></text></g><g><title>cloud-gateway`tokio::runtime::signal::Driver::process (5 samples, 0.01%)</title><rect x="20.6986%" y="165" width="0.0104%" height="15" fill="rgb(247,123,22)" fg:x="9955" fg:w="5"/><text x="20.9486%" y="175.50"></text></g><g><title>cloud-gateway`tokio::runtime::time::wheel::Wheel::next_expiration (80 samples, 0.17%)</title><rect x="20.8379%" y="149" width="0.1663%" height="15" fill="rgb(231,138,38)" fg:x="10022" fg:w="80"/><text x="21.0879%" y="159.50"></text></g><g><title>cloud-gateway`tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time::_{{closure}} (362 samples, 0.75%)</title><rect x="20.7090%" y="165" width="0.7527%" height="15" fill="rgb(231,145,46)" fg:x="9960" fg:w="362"/><text x="20.9590%" y="175.50"></text></g><g><title>cloud-gateway`tokio::runtime::time::wheel::Wheel::poll (220 samples, 0.46%)</title><rect x="21.0043%" y="149" width="0.4574%" height="15" fill="rgb(251,118,11)" fg:x="10102" fg:w="220"/><text x="21.2543%" y="159.50"></text></g><g><title>cloud-gateway`tokio::runtime::time::wheel::Wheel::next_expiration (196 samples, 0.41%)</title><rect x="21.0542%" y="133" width="0.4075%" height="15" fill="rgb(217,147,25)" fg:x="10126" fg:w="196"/><text x="21.3042%" y="143.50"></text></g><g><title>cloud-gateway`tokio::runtime::time::wheel::Wheel::next_expiration (248 samples, 0.52%)</title><rect x="21.4617%" y="165" width="0.5156%" height="15" fill="rgb(247,81,37)" fg:x="10322" fg:w="248"/><text x="21.7117%" y="175.50"></text></g><g><title>cloud-gateway`tokio::runtime::time::wheel::Wheel::poll (5 samples, 0.01%)</title><rect x="21.9773%" y="165" width="0.0104%" height="15" fill="rgb(209,12,38)" fg:x="10570" fg:w="5"/><text x="22.2273%" y="175.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (377 samples, 0.78%)</title><rect x="22.0335%" y="101" width="0.7839%" height="15" fill="rgb(227,1,9)" fg:x="10597" fg:w="377"/><text x="22.2835%" y="111.50"></text></g><g><title>cloud-gateway`std::sys::pal::unix::time::Timespec::now (391 samples, 0.81%)</title><rect x="22.0106%" y="133" width="0.8130%" height="15" fill="rgb(248,47,43)" fg:x="10586" fg:w="391"/><text x="22.2606%" y="143.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (391 samples, 0.81%)</title><rect x="22.0106%" y="117" width="0.8130%" height="15" fill="rgb(221,10,30)" fg:x="10586" fg:w="391"/><text x="22.2606%" y="127.50"></text></g><g><title>cloud-gateway`tokio::runtime::time::Driver::park_internal (5,191 samples, 10.79%)</title><rect x="12.0408%" y="181" width="10.7932%" height="15" fill="rgb(210,229,1)" fg:x="5791" fg:w="5191"/><text x="12.2908%" y="191.50">cloud-gateway`to..</text></g><g><title>cloud-gateway`tokio::time::clock::Clock::now (407 samples, 0.85%)</title><rect x="21.9877%" y="165" width="0.8462%" height="15" fill="rgb(222,148,37)" fg:x="10575" fg:w="407"/><text x="22.2377%" y="175.50"></text></g><g><title>cloud-gateway`std::time::Instant::elapsed (398 samples, 0.83%)</title><rect x="22.0064%" y="149" width="0.8275%" height="15" fill="rgb(234,67,33)" fg:x="10584" fg:w="398"/><text x="22.2564%" y="159.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (14 samples, 0.03%)</title><rect x="22.8464%" y="181" width="0.0291%" height="15" fill="rgb(247,98,35)" fg:x="10988" fg:w="14"/><text x="23.0964%" y="191.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_cond_wait (7 samples, 0.01%)</title><rect x="22.8756%" y="181" width="0.0146%" height="15" fill="rgb(247,138,52)" fg:x="11002" fg:w="7"/><text x="23.1256%" y="191.50"></text></g><g><title>cloud-gateway`tokio::runtime::scheduler::multi_thread::park::Parker::park (9,116 samples, 18.95%)</title><rect x="3.9443%" y="197" width="18.9542%" height="15" fill="rgb(213,79,30)" fg:x="1897" fg:w="9116"/><text x="4.1943%" y="207.50">cloud-gateway`tokio::runtime::..</text></g><g><title>cloud-gateway`tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (15 samples, 0.03%)</title><rect x="22.8984%" y="197" width="0.0312%" height="15" fill="rgb(246,177,23)" fg:x="11013" fg:w="15"/><text x="23.1484%" y="207.50"></text></g><g><title>cloud-gateway`tokio::runtime::context::with_scheduler (5 samples, 0.01%)</title><rect x="22.9691%" y="101" width="0.0104%" height="15" fill="rgb(230,62,27)" fg:x="11047" fg:w="5"/><text x="23.2191%" y="111.50"></text></g><g><title>cloud-gateway`tokio::runtime::io::scheduled_io::ScheduledIo::wake (11 samples, 0.02%)</title><rect x="22.9587%" y="149" width="0.0229%" height="15" fill="rgb(216,154,8)" fg:x="11042" fg:w="11"/><text x="23.2087%" y="159.50"></text></g><g><title>cloud-gateway`tokio::runtime::task::waker::wake_by_val (7 samples, 0.01%)</title><rect x="22.9670%" y="133" width="0.0146%" height="15" fill="rgb(244,35,45)" fg:x="11046" fg:w="7"/><text x="23.2170%" y="143.50"></text></g><g><title>cloud-gateway`tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::schedule (6 samples, 0.01%)</title><rect x="22.9691%" y="117" width="0.0125%" height="15" fill="rgb(251,115,12)" fg:x="11047" fg:w="6"/><text x="23.2191%" y="127.50"></text></g><g><title>cloud-gateway`tokio::runtime::time::Driver::park_thread_timeout (137 samples, 0.28%)</title><rect x="22.9504%" y="181" width="0.2849%" height="15" fill="rgb(240,54,50)" fg:x="11038" fg:w="137"/><text x="23.2004%" y="191.50"></text></g><g><title>cloud-gateway`tokio::runtime::io::driver::Driver::turn (134 samples, 0.28%)</title><rect x="22.9566%" y="165" width="0.2786%" height="15" fill="rgb(233,84,52)" fg:x="11041" fg:w="134"/><text x="23.2066%" y="175.50"></text></g><g><title>libsystem_kernel.dylib`kevent (122 samples, 0.25%)</title><rect x="22.9816%" y="149" width="0.2537%" height="15" fill="rgb(207,117,47)" fg:x="11053" fg:w="122"/><text x="23.2316%" y="159.50"></text></g><g><title>cloud-gateway`tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time::_{{closure}} (14 samples, 0.03%)</title><rect x="23.2353%" y="181" width="0.0291%" height="15" fill="rgb(249,43,39)" fg:x="11175" fg:w="14"/><text x="23.4853%" y="191.50"></text></g><g><title>cloud-gateway`tokio::runtime::time::wheel::Wheel::poll (10 samples, 0.02%)</title><rect x="23.2436%" y="165" width="0.0208%" height="15" fill="rgb(209,38,44)" fg:x="11179" fg:w="10"/><text x="23.4936%" y="175.50"></text></g><g><title>cloud-gateway`tokio::runtime::time::wheel::Wheel::next_expiration (9 samples, 0.02%)</title><rect x="23.2457%" y="149" width="0.0187%" height="15" fill="rgb(236,212,23)" fg:x="11180" fg:w="9"/><text x="23.4957%" y="159.50"></text></g><g><title>cloud-gateway`tokio::runtime::time::wheel::Wheel::next_expiration (9 samples, 0.02%)</title><rect x="23.2644%" y="181" width="0.0187%" height="15" fill="rgb(242,79,21)" fg:x="11189" fg:w="9"/><text x="23.5144%" y="191.50"></text></g><g><title>cloud-gateway`tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (9,706 samples, 20.18%)</title><rect x="3.1188%" y="213" width="20.1809%" height="15" fill="rgb(211,96,35)" fg:x="1500" fg:w="9706"/><text x="3.3688%" y="223.50">cloud-gateway`tokio::runtime::sc..</text></g><g><title>cloud-gateway`tokio::runtime::time::Driver::park_internal (178 samples, 0.37%)</title><rect x="22.9296%" y="197" width="0.3701%" height="15" fill="rgb(253,215,40)" fg:x="11028" fg:w="178"/><text x="23.1796%" y="207.50"></text></g><g><title>cloud-gateway`tokio::time::clock::Clock::now (8 samples, 0.02%)</title><rect x="23.2831%" y="181" width="0.0166%" height="15" fill="rgb(211,81,21)" fg:x="11198" fg:w="8"/><text x="23.5331%" y="191.50"></text></g><g><title>cloud-gateway`std::time::Instant::elapsed (8 samples, 0.02%)</title><rect x="23.2831%" y="165" width="0.0166%" height="15" fill="rgb(208,190,38)" fg:x="11198" fg:w="8"/><text x="23.5331%" y="175.50"></text></g><g><title>cloud-gateway`std::sys::pal::unix::time::Timespec::now (8 samples, 0.02%)</title><rect x="23.2831%" y="149" width="0.0166%" height="15" fill="rgb(235,213,38)" fg:x="11198" fg:w="8"/><text x="23.5331%" y="159.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (8 samples, 0.02%)</title><rect x="23.2831%" y="133" width="0.0166%" height="15" fill="rgb(237,122,38)" fg:x="11198" fg:w="8"/><text x="23.5331%" y="143.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (7 samples, 0.01%)</title><rect x="23.2852%" y="117" width="0.0146%" height="15" fill="rgb(244,218,35)" fg:x="11199" fg:w="7"/><text x="23.5352%" y="127.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (153 samples, 0.32%)</title><rect x="23.4536%" y="149" width="0.3181%" height="15" fill="rgb(240,68,47)" fg:x="11280" fg:w="153"/><text x="23.7036%" y="159.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (156 samples, 0.32%)</title><rect x="23.4494%" y="165" width="0.3244%" height="15" fill="rgb(210,16,53)" fg:x="11278" fg:w="156"/><text x="23.6994%" y="175.50"></text></g><g><title>cloud-gateway`std::sys::pal::unix::time::Timespec::now (157 samples, 0.33%)</title><rect x="23.4494%" y="181" width="0.3264%" height="15" fill="rgb(235,124,12)" fg:x="11278" fg:w="157"/><text x="23.6994%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (1,316 samples, 2.74%)</title><rect x="23.7779%" y="181" width="2.7363%" height="15" fill="rgb(224,169,11)" fg:x="11436" fg:w="1316"/><text x="24.0279%" y="191.50">li..</text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (8 samples, 0.02%)</title><rect x="26.5183%" y="181" width="0.0166%" height="15" fill="rgb(250,166,2)" fg:x="12754" fg:w="8"/><text x="26.7683%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (8 samples, 0.02%)</title><rect x="26.5183%" y="165" width="0.0166%" height="15" fill="rgb(242,216,29)" fg:x="12754" fg:w="8"/><text x="26.7683%" y="175.50"></text></g><g><title>cloud-gateway`parking_lot::condvar::Condvar::notify_one_slow (1,537 samples, 3.20%)</title><rect x="23.3538%" y="197" width="3.1958%" height="15" fill="rgb(230,116,27)" fg:x="11232" fg:w="1537"/><text x="23.6038%" y="207.50">clo..</text></g><g><title>cloud-gateway`tokio::runtime::driver::Handle::unpark (16 samples, 0.03%)</title><rect x="26.5537%" y="197" width="0.0333%" height="15" fill="rgb(228,99,48)" fg:x="12771" fg:w="16"/><text x="26.8037%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`kevent (15 samples, 0.03%)</title><rect x="26.5558%" y="181" width="0.0312%" height="15" fill="rgb(253,11,6)" fg:x="12772" fg:w="15"/><text x="26.8058%" y="191.50"></text></g><g><title>cloud-gateway`tokio::runtime::task::core::Core&lt;T,S&gt;::poll (5 samples, 0.01%)</title><rect x="26.5911%" y="197" width="0.0104%" height="15" fill="rgb(247,143,39)" fg:x="12789" fg:w="5"/><text x="26.8411%" y="207.50"></text></g><g><title>cloud-gateway`&lt;alloc::collections::vec_deque::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (18 samples, 0.04%)</title><rect x="26.6660%" y="149" width="0.0374%" height="15" fill="rgb(236,97,10)" fg:x="12825" fg:w="18"/><text x="26.9160%" y="159.50"></text></g><g><title>cloud-gateway`&lt;cloud_gateway::gateway::bodies::single_chunk_body::SingleChunkBody as http_body::Body&gt;::is_end_stream (11 samples, 0.02%)</title><rect x="26.7034%" y="149" width="0.0229%" height="15" fill="rgb(233,208,19)" fg:x="12843" fg:w="11"/><text x="26.9534%" y="159.50"></text></g><g><title>cloud-gateway`&lt;hyper::proto::h1::dispatch::Server&lt;S,hyper::body::incoming::Incoming&gt; as hyper::proto::h1::dispatch::Dispatch&gt;::recv_msg (10 samples, 0.02%)</title><rect x="26.7284%" y="149" width="0.0208%" height="15" fill="rgb(216,164,2)" fg:x="12855" fg:w="10"/><text x="26.9784%" y="159.50"></text></g><g><title>cloud-gateway`&lt;hyper::proto::h1::role::Server as hyper::proto::h1::Http1Transaction&gt;::update_date (15 samples, 0.03%)</title><rect x="26.7491%" y="149" width="0.0312%" height="15" fill="rgb(220,129,5)" fg:x="12865" fg:w="15"/><text x="26.9991%" y="159.50"></text></g><g><title>cloud-gateway`hyper::common::date::update (12 samples, 0.02%)</title><rect x="26.8074%" y="149" width="0.0250%" height="15" fill="rgb(242,17,10)" fg:x="12893" fg:w="12"/><text x="27.0574%" y="159.50"></text></g><g><title>cloud-gateway`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_head (10 samples, 0.02%)</title><rect x="26.8365%" y="149" width="0.0208%" height="15" fill="rgb(242,107,0)" fg:x="12907" fg:w="10"/><text x="27.0865%" y="159.50"></text></g><g><title>cloud-gateway`&lt;alloc::collections::vec_deque::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (11 samples, 0.02%)</title><rect x="27.0985%" y="133" width="0.0229%" height="15" fill="rgb(251,28,31)" fg:x="13033" fg:w="11"/><text x="27.3485%" y="143.50"></text></g><g><title>cloud-gateway`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.02%)</title><rect x="27.1983%" y="117" width="0.0208%" height="15" fill="rgb(233,223,10)" fg:x="13081" fg:w="10"/><text x="27.4483%" y="127.50"></text></g><g><title>cloud-gateway`&lt;hyper::proto::h1::dispatch::Server&lt;S,hyper::body::incoming::Incoming&gt; as hyper::proto::h1::dispatch::Dispatch&gt;::recv_msg (82 samples, 0.17%)</title><rect x="27.1338%" y="133" width="0.1705%" height="15" fill="rgb(215,21,27)" fg:x="13050" fg:w="82"/><text x="27.3838%" y="143.50"></text></g><g><title>cloud-gateway`http::request::Parts::new (26 samples, 0.05%)</title><rect x="27.2502%" y="117" width="0.0541%" height="15" fill="rgb(232,23,21)" fg:x="13106" fg:w="26"/><text x="27.5002%" y="127.50"></text></g><g><title>cloud-gateway`&lt;hyper::proto::h1::role::Server as hyper::proto::h1::Http1Transaction&gt;::encode (5 samples, 0.01%)</title><rect x="27.3043%" y="133" width="0.0104%" height="15" fill="rgb(244,5,23)" fg:x="13132" fg:w="5"/><text x="27.5543%" y="143.50"></text></g><g><title>cloud-gateway`DYLD-STUB$$malloc (7 samples, 0.01%)</title><rect x="27.3292%" y="133" width="0.0146%" height="15" fill="rgb(226,81,46)" fg:x="13144" fg:w="7"/><text x="27.5792%" y="143.50"></text></g><g><title>cloud-gateway`DYLD-STUB$$memcpy (5 samples, 0.01%)</title><rect x="27.3438%" y="133" width="0.0104%" height="15" fill="rgb(247,70,30)" fg:x="13151" fg:w="5"/><text x="27.5938%" y="143.50"></text></g><g><title>cloud-gateway`cloud_gateway::gateway_metrics::inc_responses_total (5 samples, 0.01%)</title><rect x="27.3667%" y="133" width="0.0104%" height="15" fill="rgb(212,68,19)" fg:x="13162" fg:w="5"/><text x="27.6167%" y="143.50"></text></g><g><title>cloud-gateway`alloc::raw_vec::finish_grow (9 samples, 0.02%)</title><rect x="27.5205%" y="85" width="0.0187%" height="15" fill="rgb(240,187,13)" fg:x="13236" fg:w="9"/><text x="27.7705%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (6 samples, 0.01%)</title><rect x="27.5268%" y="69" width="0.0125%" height="15" fill="rgb(223,113,26)" fg:x="13239" fg:w="6"/><text x="27.7768%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (5 samples, 0.01%)</title><rect x="27.5392%" y="85" width="0.0104%" height="15" fill="rgb(206,192,2)" fg:x="13245" fg:w="5"/><text x="27.7892%" y="95.50"></text></g><g><title>cloud-gateway`&lt;alloc::string::String as core::fmt::Write&gt;::write_str (24 samples, 0.05%)</title><rect x="27.5039%" y="117" width="0.0499%" height="15" fill="rgb(241,108,4)" fg:x="13228" fg:w="24"/><text x="27.7539%" y="127.50"></text></g><g><title>cloud-gateway`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (22 samples, 0.05%)</title><rect x="27.5081%" y="101" width="0.0457%" height="15" fill="rgb(247,173,49)" fg:x="13230" fg:w="22"/><text x="27.7581%" y="111.50"></text></g><g><title>cloud-gateway`&lt;cloud_gateway::gateway::predicates::Predicate as cloud_gateway::gateway::predicates::Evaluable&lt;T&gt;&gt;::evaluate (5 samples, 0.01%)</title><rect x="27.5538%" y="117" width="0.0104%" height="15" fill="rgb(224,114,35)" fg:x="13252" fg:w="5"/><text x="27.8038%" y="127.50"></text></g><g><title>cloud-gateway`&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.04%)</title><rect x="27.5642%" y="117" width="0.0353%" height="15" fill="rgb(245,159,27)" fg:x="13257" fg:w="17"/><text x="27.8142%" y="127.50"></text></g><g><title>cloud-gateway`&lt;tokio::sync::batch_semaphore::Acquire as core::future::future::Future&gt;::poll (36 samples, 0.07%)</title><rect x="27.5995%" y="117" width="0.0749%" height="15" fill="rgb(245,172,44)" fg:x="13274" fg:w="36"/><text x="27.8495%" y="127.50"></text></g><g><title>cloud-gateway`&lt;tokio::sync::batch_semaphore::Acquire as core::ops::drop::Drop&gt;::drop (12 samples, 0.02%)</title><rect x="27.6744%" y="117" width="0.0250%" height="15" fill="rgb(236,23,11)" fg:x="13310" fg:w="12"/><text x="27.9244%" y="127.50"></text></g><g><title>cloud-gateway`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (12 samples, 0.02%)</title><rect x="27.7118%" y="117" width="0.0250%" height="15" fill="rgb(205,117,38)" fg:x="13328" fg:w="12"/><text x="27.9618%" y="127.50"></text></g><g><title>cloud-gateway`&lt;metrics::common::KeyHasher as core::hash::Hasher&gt;::write (40 samples, 0.08%)</title><rect x="27.7576%" y="101" width="0.0832%" height="15" fill="rgb(237,72,25)" fg:x="13350" fg:w="40"/><text x="28.0076%" y="111.50"></text></g><g><title>cloud-gateway`cloud_gateway::gateway_metrics::inc_requests_total (74 samples, 0.15%)</title><rect x="27.7409%" y="117" width="0.1539%" height="15" fill="rgb(244,70,9)" fg:x="13342" fg:w="74"/><text x="27.9909%" y="127.50"></text></g><g><title>cloud-gateway`metrics::key::Key::builder (26 samples, 0.05%)</title><rect x="27.8407%" y="101" width="0.0541%" height="15" fill="rgb(217,125,39)" fg:x="13390" fg:w="26"/><text x="28.0907%" y="111.50"></text></g><g><title>cloud-gateway`&lt;metrics::common::KeyHasher as core::hash::Hasher&gt;::write (28 samples, 0.06%)</title><rect x="27.9156%" y="101" width="0.0582%" height="15" fill="rgb(235,36,10)" fg:x="13426" fg:w="28"/><text x="28.1656%" y="111.50"></text></g><g><title>cloud-gateway`cloud_gateway::gateway_metrics::inc_responses_total (82 samples, 0.17%)</title><rect x="27.8948%" y="117" width="0.1705%" height="15" fill="rgb(251,123,47)" fg:x="13416" fg:w="82"/><text x="28.1448%" y="127.50"></text></g><g><title>cloud-gateway`metrics::key::Key::builder (44 samples, 0.09%)</title><rect x="27.9738%" y="101" width="0.0915%" height="15" fill="rgb(221,13,13)" fg:x="13454" fg:w="44"/><text x="28.2238%" y="111.50"></text></g><g><title>cloud-gateway`core::ptr::drop_in_place&lt;http::header::map::HeaderMap&gt; (5 samples, 0.01%)</title><rect x="28.0674%" y="117" width="0.0104%" height="15" fill="rgb(238,131,9)" fg:x="13499" fg:w="5"/><text x="28.3174%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (127 samples, 0.26%)</title><rect x="28.1672%" y="85" width="0.2641%" height="15" fill="rgb(211,50,8)" fg:x="13547" fg:w="127"/><text x="28.4172%" y="95.50"></text></g><g><title>cloud-gateway`&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (172 samples, 0.36%)</title><rect x="28.0882%" y="101" width="0.3576%" height="15" fill="rgb(245,182,24)" fg:x="13509" fg:w="172"/><text x="28.3382%" y="111.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (7 samples, 0.01%)</title><rect x="28.4312%" y="85" width="0.0146%" height="15" fill="rgb(242,14,37)" fg:x="13674" fg:w="7"/><text x="28.6812%" y="95.50"></text></g><g><title>cloud-gateway`DYLD-STUB$$free (9 samples, 0.02%)</title><rect x="28.4458%" y="101" width="0.0187%" height="15" fill="rgb(246,228,12)" fg:x="13681" fg:w="9"/><text x="28.6958%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (17 samples, 0.04%)</title><rect x="28.5290%" y="53" width="0.0353%" height="15" fill="rgb(213,55,15)" fg:x="13721" fg:w="17"/><text x="28.7790%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (19 samples, 0.04%)</title><rect x="28.5643%" y="53" width="0.0395%" height="15" fill="rgb(209,9,3)" fg:x="13738" fg:w="19"/><text x="28.8143%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (36 samples, 0.07%)</title><rect x="28.9677%" y="37" width="0.0749%" height="15" fill="rgb(230,59,30)" fg:x="13932" fg:w="36"/><text x="29.2177%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (27 samples, 0.06%)</title><rect x="29.0467%" y="37" width="0.0561%" height="15" fill="rgb(209,121,21)" fg:x="13970" fg:w="27"/><text x="29.2967%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`free_small (241 samples, 0.50%)</title><rect x="28.6038%" y="53" width="0.5011%" height="15" fill="rgb(220,109,13)" fg:x="13757" fg:w="241"/><text x="28.8538%" y="63.50"></text></g><g><title>cloud-gateway`bytes::bytes_mut::shared_v_drop (285 samples, 0.59%)</title><rect x="28.5165%" y="69" width="0.5926%" height="15" fill="rgb(232,18,1)" fg:x="13715" fg:w="285"/><text x="28.7665%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_bzero (9 samples, 0.02%)</title><rect x="29.1091%" y="69" width="0.0187%" height="15" fill="rgb(215,41,42)" fg:x="14000" fg:w="9"/><text x="29.3591%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`_free (7 samples, 0.01%)</title><rect x="29.1278%" y="69" width="0.0146%" height="15" fill="rgb(224,123,36)" fg:x="14009" fg:w="7"/><text x="29.3778%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (25 samples, 0.05%)</title><rect x="29.1423%" y="69" width="0.0520%" height="15" fill="rgb(240,125,3)" fg:x="14016" fg:w="25"/><text x="29.3923%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (7 samples, 0.01%)</title><rect x="29.1943%" y="69" width="0.0146%" height="15" fill="rgb(205,98,50)" fg:x="14041" fg:w="7"/><text x="29.4443%" y="79.50"></text></g><g><title>cloud-gateway`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (358 samples, 0.74%)</title><rect x="28.4853%" y="85" width="0.7444%" height="15" fill="rgb(205,185,37)" fg:x="13700" fg:w="358"/><text x="28.7353%" y="95.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (5 samples, 0.01%)</title><rect x="29.2193%" y="69" width="0.0104%" height="15" fill="rgb(238,207,15)" fg:x="14053" fg:w="5"/><text x="29.4693%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (37 samples, 0.08%)</title><rect x="29.2421%" y="85" width="0.0769%" height="15" fill="rgb(213,199,42)" fg:x="14064" fg:w="37"/><text x="29.4921%" y="95.50"></text></g><g><title>cloud-gateway`core::ptr::drop_in_place&lt;http::header::map::HeaderMap&gt; (409 samples, 0.85%)</title><rect x="28.4811%" y="101" width="0.8504%" height="15" fill="rgb(235,201,11)" fg:x="13698" fg:w="409"/><text x="28.7311%" y="111.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (6 samples, 0.01%)</title><rect x="29.3191%" y="85" width="0.0125%" height="15" fill="rgb(207,46,11)" fg:x="14101" fg:w="6"/><text x="29.5691%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`_free (19 samples, 0.04%)</title><rect x="29.3419%" y="101" width="0.0395%" height="15" fill="rgb(241,35,35)" fg:x="14112" fg:w="19"/><text x="29.5919%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (37 samples, 0.08%)</title><rect x="29.3814%" y="101" width="0.0769%" height="15" fill="rgb(243,32,47)" fg:x="14131" fg:w="37"/><text x="29.6314%" y="111.50"></text></g><g><title>cloud-gateway`core::ptr::drop_in_place&lt;http::request::Request&lt;hyper::body::incoming::Incoming&gt;&gt; (669 samples, 1.39%)</title><rect x="28.0778%" y="117" width="1.3910%" height="15" fill="rgb(247,202,23)" fg:x="13504" fg:w="669"/><text x="28.3278%" y="127.50"></text></g><g><title>cloud-gateway`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (30 samples, 0.06%)</title><rect x="29.4833%" y="117" width="0.0624%" height="15" fill="rgb(219,102,11)" fg:x="14180" fg:w="30"/><text x="29.7333%" y="127.50"></text></g><g><title>cloud-gateway`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (15 samples, 0.03%)</title><rect x="29.6018%" y="85" width="0.0312%" height="15" fill="rgb(243,110,44)" fg:x="14237" fg:w="15"/><text x="29.8518%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (9 samples, 0.02%)</title><rect x="29.6143%" y="69" width="0.0187%" height="15" fill="rgb(222,74,54)" fg:x="14243" fg:w="9"/><text x="29.8643%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (9 samples, 0.02%)</title><rect x="29.6330%" y="85" width="0.0187%" height="15" fill="rgb(216,99,12)" fg:x="14252" fg:w="9"/><text x="29.8830%" y="95.50"></text></g><g><title>cloud-gateway`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (60 samples, 0.12%)</title><rect x="29.5623%" y="101" width="0.1248%" height="15" fill="rgb(226,22,26)" fg:x="14218" fg:w="60"/><text x="29.8123%" y="111.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (17 samples, 0.04%)</title><rect x="29.6517%" y="85" width="0.0353%" height="15" fill="rgb(217,163,10)" fg:x="14261" fg:w="17"/><text x="29.9017%" y="95.50"></text></g><g><title>cloud-gateway`http::extensions::Extensions::insert (94 samples, 0.20%)</title><rect x="29.5457%" y="117" width="0.1954%" height="15" fill="rgb(213,25,53)" fg:x="14210" fg:w="94"/><text x="29.7957%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (24 samples, 0.05%)</title><rect x="29.6912%" y="101" width="0.0499%" height="15" fill="rgb(252,105,26)" fg:x="14280" fg:w="24"/><text x="29.9412%" y="111.50"></text></g><g><title>cloud-gateway`http::response::Parts::new (95 samples, 0.20%)</title><rect x="29.7411%" y="117" width="0.1975%" height="15" fill="rgb(220,39,43)" fg:x="14304" fg:w="95"/><text x="29.9911%" y="127.50"></text></g><g><title>cloud-gateway`metrics::key::Key::builder (19 samples, 0.04%)</title><rect x="29.9428%" y="117" width="0.0395%" height="15" fill="rgb(229,68,48)" fg:x="14401" fg:w="19"/><text x="30.1928%" y="127.50"></text></g><g><title>libsystem_c.dylib`clock_gettime_nsec_np (9 samples, 0.02%)</title><rect x="30.0218%" y="85" width="0.0187%" height="15" fill="rgb(252,8,32)" fg:x="14439" fg:w="9"/><text x="30.2718%" y="95.50"></text></g><g><title>libsystem_kernel.dylib`mach_timebase_info (6 samples, 0.01%)</title><rect x="30.0281%" y="69" width="0.0125%" height="15" fill="rgb(223,20,43)" fg:x="14442" fg:w="6"/><text x="30.2781%" y="79.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (101 samples, 0.21%)</title><rect x="30.0405%" y="85" width="0.2100%" height="15" fill="rgb(229,81,49)" fg:x="14448" fg:w="101"/><text x="30.2905%" y="95.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (127 samples, 0.26%)</title><rect x="29.9990%" y="101" width="0.2641%" height="15" fill="rgb(236,28,36)" fg:x="14428" fg:w="127"/><text x="30.2490%" y="111.50"></text></g><g><title>libsystem_kernel.dylib`mach_timebase_info (6 samples, 0.01%)</title><rect x="30.2505%" y="85" width="0.0125%" height="15" fill="rgb(249,185,26)" fg:x="14549" fg:w="6"/><text x="30.5005%" y="95.50"></text></g><g><title>cloud-gateway`std::sys::pal::unix::time::Timespec::now (135 samples, 0.28%)</title><rect x="29.9844%" y="117" width="0.2807%" height="15" fill="rgb(249,174,33)" fg:x="14421" fg:w="135"/><text x="30.2344%" y="127.50"></text></g><g><title>cloud-gateway`std::time::Instant::now (78 samples, 0.16%)</title><rect x="30.2651%" y="117" width="0.1622%" height="15" fill="rgb(233,201,37)" fg:x="14556" fg:w="78"/><text x="30.5151%" y="127.50"></text></g><g><title>cloud-gateway`tokio::sync::batch_semaphore::Semaphore::add_permits_locked (16 samples, 0.03%)</title><rect x="30.4273%" y="117" width="0.0333%" height="15" fill="rgb(221,78,26)" fg:x="14634" fg:w="16"/><text x="30.6773%" y="127.50"></text></g><g><title>cloud-gateway`tokio::sync::batch_semaphore::Semaphore::release (9 samples, 0.02%)</title><rect x="30.4605%" y="117" width="0.0187%" height="15" fill="rgb(250,127,30)" fg:x="14650" fg:w="9"/><text x="30.7105%" y="127.50"></text></g><g><title>cloud-gateway`parking_lot::raw_mutex::RawMutex::lock_slow (9 samples, 0.02%)</title><rect x="30.4605%" y="101" width="0.0187%" height="15" fill="rgb(230,49,44)" fg:x="14650" fg:w="9"/><text x="30.7105%" y="111.50"></text></g><g><title>libsystem_kernel.dylib`swtch_pri (6 samples, 0.01%)</title><rect x="30.4668%" y="85" width="0.0125%" height="15" fill="rgb(229,67,23)" fg:x="14653" fg:w="6"/><text x="30.7168%" y="95.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (26 samples, 0.05%)</title><rect x="30.4793%" y="117" width="0.0541%" height="15" fill="rgb(249,83,47)" fg:x="14659" fg:w="26"/><text x="30.7293%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`_free (10 samples, 0.02%)</title><rect x="30.5396%" y="117" width="0.0208%" height="15" fill="rgb(215,43,3)" fg:x="14688" fg:w="10"/><text x="30.7896%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (12 samples, 0.02%)</title><rect x="30.5603%" y="117" width="0.0250%" height="15" fill="rgb(238,154,13)" fg:x="14698" fg:w="12"/><text x="30.8103%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (49 samples, 0.10%)</title><rect x="30.5853%" y="117" width="0.1019%" height="15" fill="rgb(219,56,2)" fg:x="14710" fg:w="49"/><text x="30.8353%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (13 samples, 0.03%)</title><rect x="30.6872%" y="117" width="0.0270%" height="15" fill="rgb(233,0,4)" fg:x="14759" fg:w="13"/><text x="30.9372%" y="127.50"></text></g><g><title>cloud-gateway`cloud_gateway::responder::responder::_{{closure}} (1,618 samples, 3.36%)</title><rect x="27.3771%" y="133" width="3.3642%" height="15" fill="rgb(235,30,7)" fg:x="13167" fg:w="1618"/><text x="27.6271%" y="143.50">clo..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (13 samples, 0.03%)</title><rect x="30.7142%" y="117" width="0.0270%" height="15" fill="rgb(250,79,13)" fg:x="14772" fg:w="13"/><text x="30.9642%" y="127.50"></text></g><g><title>cloud-gateway`http::header::map::HeaderMap&lt;T&gt;::get (7 samples, 0.01%)</title><rect x="30.7620%" y="133" width="0.0146%" height="15" fill="rgb(211,146,34)" fg:x="14795" fg:w="7"/><text x="31.0120%" y="143.50"></text></g><g><title>cloud-gateway`http::request::Parts::new (11 samples, 0.02%)</title><rect x="30.7766%" y="133" width="0.0229%" height="15" fill="rgb(228,22,38)" fg:x="14802" fg:w="11"/><text x="31.0266%" y="143.50"></text></g><g><title>libsystem_c.dylib`gettimeofday (146 samples, 0.30%)</title><rect x="30.8306%" y="85" width="0.3036%" height="15" fill="rgb(235,168,5)" fg:x="14828" fg:w="146"/><text x="31.0806%" y="95.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (145 samples, 0.30%)</title><rect x="30.8327%" y="69" width="0.3015%" height="15" fill="rgb(221,155,16)" fg:x="14829" fg:w="145"/><text x="31.0827%" y="79.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (156 samples, 0.32%)</title><rect x="30.8182%" y="101" width="0.3244%" height="15" fill="rgb(215,215,53)" fg:x="14822" fg:w="156"/><text x="31.0682%" y="111.50"></text></g><g><title>cloud-gateway`std::sys::pal::unix::time::Timespec::now (164 samples, 0.34%)</title><rect x="30.8182%" y="117" width="0.3410%" height="15" fill="rgb(223,4,10)" fg:x="14822" fg:w="164"/><text x="31.0682%" y="127.50"></text></g><g><title>libsystem_c.dylib`gettimeofday (8 samples, 0.02%)</title><rect x="31.1425%" y="101" width="0.0166%" height="15" fill="rgb(234,103,6)" fg:x="14978" fg:w="8"/><text x="31.3925%" y="111.50"></text></g><g><title>cloud-gateway`hyper::common::date::update (176 samples, 0.37%)</title><rect x="30.8015%" y="133" width="0.3659%" height="15" fill="rgb(227,97,0)" fg:x="14814" fg:w="176"/><text x="31.0515%" y="143.50"></text></g><g><title>cloud-gateway`&lt;alloc::collections::vec_deque::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (10 samples, 0.02%)</title><rect x="31.1758%" y="117" width="0.0208%" height="15" fill="rgb(234,150,53)" fg:x="14994" fg:w="10"/><text x="31.4258%" y="127.50"></text></g><g><title>cloud-gateway`&lt;bytes::buf::chain::Chain&lt;T,U&gt; as bytes::buf::buf_impl::Buf&gt;::advance (6 samples, 0.01%)</title><rect x="31.5334%" y="101" width="0.0125%" height="15" fill="rgb(228,201,54)" fg:x="15166" fg:w="6"/><text x="31.7834%" y="111.50"></text></g><g><title>cloud-gateway`&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write_vectored (17,327 samples, 36.03%)</title><rect x="31.6062%" y="69" width="36.0266%" height="15" fill="rgb(222,22,37)" fg:x="15201" fg:w="17327"/><text x="31.8562%" y="79.50">cloud-gateway`&lt;&amp;mio::net::tcp::stream::TcpStream as std::io..</text></g><g><title>libsystem_kernel.dylib`writev (17,323 samples, 36.02%)</title><rect x="31.6145%" y="53" width="36.0183%" height="15" fill="rgb(237,53,32)" fg:x="15205" fg:w="17323"/><text x="31.8645%" y="63.50">libsystem_kernel.dylib`writev</text></g><g><title>cloud-gateway`&lt;&amp;std::fs::File as std::io::Write&gt;::write_vectored (10 samples, 0.02%)</title><rect x="67.6328%" y="69" width="0.0208%" height="15" fill="rgb(233,25,53)" fg:x="32528" fg:w="10"/><text x="67.8828%" y="79.50"></text></g><g><title>cloud-gateway`tokio::runtime::io::registration::Registration::poll_ready (9 samples, 0.02%)</title><rect x="67.6536%" y="69" width="0.0187%" height="15" fill="rgb(210,40,34)" fg:x="32538" fg:w="9"/><text x="67.9036%" y="79.50"></text></g><g><title>cloud-gateway`tokio::runtime::io::registration::Registration::poll_io (17,386 samples, 36.15%)</title><rect x="31.5521%" y="85" width="36.1493%" height="15" fill="rgb(241,220,44)" fg:x="15175" fg:w="17386"/><text x="31.8021%" y="95.50">cloud-gateway`tokio::runtime::io::registration::Registratio..</text></g><g><title>libdyld.dylib`tlv_get_addr (11 samples, 0.02%)</title><rect x="67.6786%" y="69" width="0.0229%" height="15" fill="rgb(235,28,35)" fg:x="32550" fg:w="11"/><text x="67.9286%" y="79.50"></text></g><g><title>cloud-gateway`&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_write::AsyncWrite&gt;::poll_write_vectored (17,390 samples, 36.16%)</title><rect x="31.5480%" y="101" width="36.1576%" height="15" fill="rgb(210,56,17)" fg:x="15173" fg:w="17390"/><text x="31.7980%" y="111.50">cloud-gateway`&lt;tokio::net::tcp::stream::TcpStream as tokio:..</text></g><g><title>cloud-gateway`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_flush (17,574 samples, 36.54%)</title><rect x="31.1675%" y="133" width="36.5402%" height="15" fill="rgb(224,130,29)" fg:x="14990" fg:w="17574"/><text x="31.4175%" y="143.50">cloud-gateway`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_flu..</text></g><g><title>cloud-gateway`hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_flush (17,554 samples, 36.50%)</title><rect x="31.2091%" y="117" width="36.4986%" height="15" fill="rgb(235,212,8)" fg:x="15010" fg:w="17554"/><text x="31.4591%" y="127.50">cloud-gateway`hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_flu..</text></g><g><title>cloud-gateway`http::header::map::HeaderMap&lt;T&gt;::get (63 samples, 0.13%)</title><rect x="67.7368%" y="117" width="0.1310%" height="15" fill="rgb(223,33,50)" fg:x="32578" fg:w="63"/><text x="67.9868%" y="127.50"></text></g><g><title>cloud-gateway`http::header::map::hash_elem_using (9 samples, 0.02%)</title><rect x="67.8490%" y="101" width="0.0187%" height="15" fill="rgb(219,149,13)" fg:x="32632" fg:w="9"/><text x="68.0990%" y="111.50"></text></g><g><title>cloud-gateway`&lt;hyper::proto::h1::role::Server as hyper::proto::h1::Http1Transaction&gt;::parse (11 samples, 0.02%)</title><rect x="67.9988%" y="101" width="0.0229%" height="15" fill="rgb(250,156,29)" fg:x="32704" fg:w="11"/><text x="68.2488%" y="111.50"></text></g><g><title>cloud-gateway`&lt;hyper_util::rt::tokio::TokioIo&lt;T&gt; as hyper::rt::io::Read&gt;::poll_read (7 samples, 0.01%)</title><rect x="68.0216%" y="101" width="0.0146%" height="15" fill="rgb(216,193,19)" fg:x="32715" fg:w="7"/><text x="68.2716%" y="111.50"></text></g><g><title>cloud-gateway`&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (5 samples, 0.01%)</title><rect x="68.2004%" y="37" width="0.0104%" height="15" fill="rgb(216,135,14)" fg:x="32801" fg:w="5"/><text x="68.4504%" y="47.50"></text></g><g><title>libsystem_c.dylib`recv (9 samples, 0.02%)</title><rect x="68.2191%" y="37" width="0.0187%" height="15" fill="rgb(241,47,5)" fg:x="32810" fg:w="9"/><text x="68.4691%" y="47.50"></text></g><g><title>cloud-gateway`&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (13,079 samples, 27.19%)</title><rect x="68.1880%" y="53" width="27.1941%" height="15" fill="rgb(233,42,35)" fg:x="32795" fg:w="13079"/><text x="68.4380%" y="63.50">cloud-gateway`&lt;&amp;mio::net::tcp::stream::TcpSt..</text></g><g><title>libsystem_kernel.dylib`__recvfrom (13,055 samples, 27.14%)</title><rect x="68.2379%" y="37" width="27.1442%" height="15" fill="rgb(231,13,6)" fg:x="32819" fg:w="13055"/><text x="68.4879%" y="47.50">libsystem_kernel.dylib`__recvfrom</text></g><g><title>cloud-gateway`tokio::runtime::io::registration::Registration::poll_ready (82 samples, 0.17%)</title><rect x="95.3841%" y="53" width="0.1705%" height="15" fill="rgb(207,181,40)" fg:x="45875" fg:w="82"/><text x="95.6341%" y="63.50"></text></g><g><title>cloud-gateway`tokio::net::tcp::stream::TcpStream::poll_read_priv (13,188 samples, 27.42%)</title><rect x="68.1589%" y="69" width="27.4207%" height="15" fill="rgb(254,173,49)" fg:x="32781" fg:w="13188"/><text x="68.4089%" y="79.50">cloud-gateway`tokio::net::tcp::stream::TcpSt..</text></g><g><title>libdyld.dylib`tlv_get_addr (8 samples, 0.02%)</title><rect x="95.5629%" y="53" width="0.0166%" height="15" fill="rgb(221,1,38)" fg:x="45961" fg:w="8"/><text x="95.8129%" y="63.50"></text></g><g><title>cloud-gateway`&lt;hyper_util::rt::tokio::TokioIo&lt;T&gt; as hyper::rt::io::Read&gt;::poll_read (13,240 samples, 27.53%)</title><rect x="68.0611%" y="85" width="27.5288%" height="15" fill="rgb(206,124,46)" fg:x="32734" fg:w="13240"/><text x="68.3111%" y="95.50">cloud-gateway`&lt;hyper_util::rt::tokio::TokioI..</text></g><g><title>cloud-gateway`tokio::runtime::io::registration::Registration::poll_ready (5 samples, 0.01%)</title><rect x="95.5796%" y="69" width="0.0104%" height="15" fill="rgb(249,21,11)" fg:x="45969" fg:w="5"/><text x="95.8296%" y="79.50"></text></g><g><title>cloud-gateway`hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_read_from_io (13,260 samples, 27.57%)</title><rect x="68.0362%" y="101" width="27.5704%" height="15" fill="rgb(222,201,40)" fg:x="32722" fg:w="13260"/><text x="68.2862%" y="111.50">cloud-gateway`hyper::proto::h1::io::Buffered..</text></g><g><title>cloud-gateway`tokio::net::tcp::stream::TcpStream::poll_read_priv (6 samples, 0.01%)</title><rect x="95.5941%" y="85" width="0.0125%" height="15" fill="rgb(235,61,29)" fg:x="45976" fg:w="6"/><text x="95.8441%" y="95.50"></text></g><g><title>cloud-gateway`hyper::proto::h1::io::ReadStrategy::record (12 samples, 0.02%)</title><rect x="95.6066%" y="101" width="0.0250%" height="15" fill="rgb(219,207,3)" fg:x="45982" fg:w="12"/><text x="95.8566%" y="111.50"></text></g><g><title>cloud-gateway`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.03%)</title><rect x="96.1347%" y="69" width="0.0312%" height="15" fill="rgb(222,56,46)" fg:x="46236" fg:w="15"/><text x="96.3847%" y="79.50"></text></g><g><title>cloud-gateway`__rdl_alloc (10 samples, 0.02%)</title><rect x="96.1742%" y="69" width="0.0208%" height="15" fill="rgb(239,76,54)" fg:x="46255" fg:w="10"/><text x="96.4242%" y="79.50"></text></g><g><title>cloud-gateway`__rust_alloc (11 samples, 0.02%)</title><rect x="96.1950%" y="69" width="0.0229%" height="15" fill="rgb(231,124,27)" fg:x="46265" fg:w="11"/><text x="96.4450%" y="79.50"></text></g><g><title>cloud-gateway`bytes::bytes::Bytes::slice_ref (15 samples, 0.03%)</title><rect x="96.2262%" y="69" width="0.0312%" height="15" fill="rgb(249,195,6)" fg:x="46280" fg:w="15"/><text x="96.4762%" y="79.50"></text></g><g><title>cloud-gateway`bytes::bytes_mut::BytesMut::split_to (39 samples, 0.08%)</title><rect x="96.2657%" y="69" width="0.0811%" height="15" fill="rgb(237,174,47)" fg:x="46299" fg:w="39"/><text x="96.5157%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (17 samples, 0.04%)</title><rect x="96.3115%" y="53" width="0.0353%" height="15" fill="rgb(206,201,31)" fg:x="46321" fg:w="17"/><text x="96.5615%" y="63.50"></text></g><g><title>cloud-gateway`bytes::bytes_mut::shared_v_clone (9 samples, 0.02%)</title><rect x="96.3468%" y="69" width="0.0187%" height="15" fill="rgb(231,57,52)" fg:x="46338" fg:w="9"/><text x="96.5968%" y="79.50"></text></g><g><title>cloud-gateway`http::header::map::HeaderMap&lt;T&gt;::try_insert_entry (186 samples, 0.39%)</title><rect x="96.4237%" y="53" width="0.3867%" height="15" fill="rgb(248,177,22)" fg:x="46375" fg:w="186"/><text x="96.6737%" y="63.50"></text></g><g><title>cloud-gateway`http::header::map::HeaderMap&lt;T&gt;::try_append2 (225 samples, 0.47%)</title><rect x="96.3655%" y="69" width="0.4678%" height="15" fill="rgb(215,211,37)" fg:x="46347" fg:w="225"/><text x="96.6155%" y="79.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (5 samples, 0.01%)</title><rect x="96.8230%" y="53" width="0.0104%" height="15" fill="rgb(241,128,51)" fg:x="46567" fg:w="5"/><text x="97.0730%" y="63.50"></text></g><g><title>cloud-gateway`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.01%)</title><rect x="96.8833%" y="53" width="0.0125%" height="15" fill="rgb(227,165,31)" fg:x="46596" fg:w="6"/><text x="97.1333%" y="63.50"></text></g><g><title>cloud-gateway`http::header::map::HeaderMap&lt;T&gt;::try_reserve (45 samples, 0.09%)</title><rect x="96.8354%" y="69" width="0.0936%" height="15" fill="rgb(228,167,24)" fg:x="46573" fg:w="45"/><text x="97.0854%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (16 samples, 0.03%)</title><rect x="96.8957%" y="53" width="0.0333%" height="15" fill="rgb(228,143,12)" fg:x="46602" fg:w="16"/><text x="97.1457%" y="63.50"></text></g><g><title>cloud-gateway`http::header::map::HeaderMap&lt;T&gt;::try_reserve_one (7 samples, 0.01%)</title><rect x="96.9290%" y="69" width="0.0146%" height="15" fill="rgb(249,149,8)" fg:x="46618" fg:w="7"/><text x="97.1790%" y="79.50"></text></g><g><title>cloud-gateway`http::header::name::HeaderName::from_bytes (9 samples, 0.02%)</title><rect x="96.9498%" y="69" width="0.0187%" height="15" fill="rgb(243,35,44)" fg:x="46628" fg:w="9"/><text x="97.1998%" y="79.50"></text></g><g><title>cloud-gateway`http::header::name::StandardHeader::from_bytes (23 samples, 0.05%)</title><rect x="96.9685%" y="69" width="0.0478%" height="15" fill="rgb(246,89,9)" fg:x="46637" fg:w="23"/><text x="97.2185%" y="79.50"></text></g><g><title>cloud-gateway`http::method::Method::from_bytes (21 samples, 0.04%)</title><rect x="97.0163%" y="69" width="0.0437%" height="15" fill="rgb(233,213,13)" fg:x="46660" fg:w="21"/><text x="97.2663%" y="79.50"></text></g><g><title>cloud-gateway`http::uri::Uri::from_shared (80 samples, 0.17%)</title><rect x="97.0600%" y="69" width="0.1663%" height="15" fill="rgb(233,141,41)" fg:x="46681" fg:w="80"/><text x="97.3100%" y="79.50"></text></g><g><title>cloud-gateway`http::uri::path::PathAndQuery::from_shared (65 samples, 0.14%)</title><rect x="97.0912%" y="53" width="0.1351%" height="15" fill="rgb(239,167,4)" fg:x="46696" fg:w="65"/><text x="97.3412%" y="63.50"></text></g><g><title>cloud-gateway`http::uri::path::PathAndQuery::from_shared (16 samples, 0.03%)</title><rect x="97.2263%" y="69" width="0.0333%" height="15" fill="rgb(209,217,16)" fg:x="46761" fg:w="16"/><text x="97.4763%" y="79.50"></text></g><g><title>cloud-gateway`httparse::Request::parse_with_config_and_uninit_headers (167 samples, 0.35%)</title><rect x="97.2741%" y="53" width="0.3472%" height="15" fill="rgb(219,88,35)" fg:x="46784" fg:w="167"/><text x="97.5241%" y="63.50"></text></g><g><title>cloud-gateway`httparse::parse_headers_iter_uninit (89 samples, 0.19%)</title><rect x="97.4363%" y="37" width="0.1851%" height="15" fill="rgb(220,193,23)" fg:x="46862" fg:w="89"/><text x="97.6863%" y="47.50"></text></g><g><title>cloud-gateway`httparse::parse_headers_iter_uninit (6 samples, 0.01%)</title><rect x="97.6214%" y="53" width="0.0125%" height="15" fill="rgb(230,90,52)" fg:x="46951" fg:w="6"/><text x="97.8714%" y="63.50"></text></g><g><title>cloud-gateway`httparse::Request::parse_with_uninit_headers (180 samples, 0.37%)</title><rect x="97.2679%" y="69" width="0.3743%" height="15" fill="rgb(252,106,19)" fg:x="46781" fg:w="180"/><text x="97.5179%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (36 samples, 0.07%)</title><rect x="97.6422%" y="69" width="0.0749%" height="15" fill="rgb(206,74,20)" fg:x="46961" fg:w="36"/><text x="97.8922%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`malloc (19 samples, 0.04%)</title><rect x="97.7170%" y="69" width="0.0395%" height="15" fill="rgb(230,138,44)" fg:x="46997" fg:w="19"/><text x="97.9670%" y="79.50"></text></g><g><title>cloud-gateway`&lt;hyper::proto::h1::role::Server as hyper::proto::h1::Http1Transaction&gt;::parse (1,003 samples, 2.09%)</title><rect x="95.7002%" y="85" width="2.0855%" height="15" fill="rgb(235,182,43)" fg:x="46027" fg:w="1003"/><text x="95.9502%" y="95.50">c..</text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (14 samples, 0.03%)</title><rect x="97.7565%" y="69" width="0.0291%" height="15" fill="rgb(242,16,51)" fg:x="47016" fg:w="14"/><text x="98.0065%" y="79.50"></text></g><g><title>cloud-gateway`bytes::bytes_mut::BytesMut::split_to (18 samples, 0.04%)</title><rect x="97.7960%" y="85" width="0.0374%" height="15" fill="rgb(248,9,4)" fg:x="47035" fg:w="18"/><text x="98.0460%" y="95.50"></text></g><g><title>cloud-gateway`core::ptr::drop_in_place&lt;core::option::Option&lt;http::method::Method&gt;&gt; (5 samples, 0.01%)</title><rect x="97.8335%" y="85" width="0.0104%" height="15" fill="rgb(210,31,22)" fg:x="47053" fg:w="5"/><text x="98.0835%" y="95.50"></text></g><g><title>cloud-gateway`http::header::map::HeaderMap&lt;T&gt;::try_reserve (7 samples, 0.01%)</title><rect x="97.8522%" y="85" width="0.0146%" height="15" fill="rgb(239,54,39)" fg:x="47062" fg:w="7"/><text x="98.1022%" y="95.50"></text></g><g><title>cloud-gateway`http::header::name::HeaderName::from_bytes (5 samples, 0.01%)</title><rect x="97.8667%" y="85" width="0.0104%" height="15" fill="rgb(230,99,41)" fg:x="47069" fg:w="5"/><text x="98.1167%" y="95.50"></text></g><g><title>cloud-gateway`http::method::Method::from_bytes (14 samples, 0.03%)</title><rect x="97.8771%" y="85" width="0.0291%" height="15" fill="rgb(253,106,12)" fg:x="47074" fg:w="14"/><text x="98.1271%" y="95.50"></text></g><g><title>cloud-gateway`http::uri::Uri::from_shared (24 samples, 0.05%)</title><rect x="97.9062%" y="85" width="0.0499%" height="15" fill="rgb(213,46,41)" fg:x="47088" fg:w="24"/><text x="98.1562%" y="95.50"></text></g><g><title>cloud-gateway`httparse::Request::parse_with_uninit_headers (9 samples, 0.02%)</title><rect x="97.9561%" y="85" width="0.0187%" height="15" fill="rgb(215,133,35)" fg:x="47112" fg:w="9"/><text x="98.2061%" y="95.50"></text></g><g><title>cloud-gateway`hyper::proto::h1::io::Buffered&lt;T,B&gt;::parse (14,479 samples, 30.11%)</title><rect x="67.8740%" y="117" width="30.1050%" height="15" fill="rgb(213,28,5)" fg:x="32644" fg:w="14479"/><text x="68.1240%" y="127.50">cloud-gateway`hyper::proto::h1::io::Buffered&lt;T,B&gt;..</text></g><g><title>cloud-gateway`hyper::proto::h1::role::parse_headers (1,129 samples, 2.35%)</title><rect x="95.6316%" y="101" width="2.3474%" height="15" fill="rgb(215,77,49)" fg:x="45994" fg:w="1129"/><text x="95.8816%" y="111.50">c..</text></g><g><title>cloud-gateway`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_head (14,568 samples, 30.29%)</title><rect x="67.7077%" y="133" width="30.2901%" height="15" fill="rgb(248,100,22)" fg:x="32564" fg:w="14568"/><text x="67.9577%" y="143.50">cloud-gateway`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;..</text></g><g><title>cloud-gateway`hyper::proto::h1::role::parse_headers (6 samples, 0.01%)</title><rect x="97.9852%" y="117" width="0.0125%" height="15" fill="rgb(208,67,9)" fg:x="47126" fg:w="6"/><text x="98.2352%" y="127.50"></text></g><g><title>cloud-gateway`tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (25 samples, 0.05%)</title><rect x="98.0913%" y="53" width="0.0520%" height="15" fill="rgb(219,133,21)" fg:x="47177" fg:w="25"/><text x="98.3413%" y="63.50"></text></g><g><title>cloud-gateway`tokio::runtime::io::registration::Registration::poll_ready (34 samples, 0.07%)</title><rect x="98.0746%" y="69" width="0.0707%" height="15" fill="rgb(246,46,29)" fg:x="47169" fg:w="34"/><text x="98.3246%" y="79.50"></text></g><g><title>cloud-gateway`tokio::net::tcp::stream::TcpStream::poll_read_priv (73 samples, 0.15%)</title><rect x="98.0518%" y="85" width="0.1518%" height="15" fill="rgb(246,185,52)" fg:x="47158" fg:w="73"/><text x="98.3018%" y="95.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (27 samples, 0.06%)</title><rect x="98.1474%" y="69" width="0.0561%" height="15" fill="rgb(252,136,11)" fg:x="47204" fg:w="27"/><text x="98.3974%" y="79.50"></text></g><g><title>cloud-gateway`&lt;hyper_util::rt::tokio::TokioIo&lt;T&gt; as hyper::rt::io::Read&gt;::poll_read (75 samples, 0.16%)</title><rect x="98.0497%" y="101" width="0.1559%" height="15" fill="rgb(219,138,53)" fg:x="47157" fg:w="75"/><text x="98.2997%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`rack_get_thread_index (9 samples, 0.02%)</title><rect x="98.2639%" y="69" width="0.0187%" height="15" fill="rgb(211,51,23)" fg:x="47260" fg:w="9"/><text x="98.5139%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (5 samples, 0.01%)</title><rect x="98.2826%" y="69" width="0.0104%" height="15" fill="rgb(247,221,28)" fg:x="47269" fg:w="5"/><text x="98.5326%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (20 samples, 0.04%)</title><rect x="98.6215%" y="37" width="0.0416%" height="15" fill="rgb(251,222,45)" fg:x="47432" fg:w="20"/><text x="98.8715%" y="47.50"></text></g><g><title>cloud-gateway`bytes::bytes_mut::BytesMut::reserve_inner (246 samples, 0.51%)</title><rect x="98.2140%" y="101" width="0.5115%" height="15" fill="rgb(217,162,53)" fg:x="47236" fg:w="246"/><text x="98.4640%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (228 samples, 0.47%)</title><rect x="98.2514%" y="85" width="0.4741%" height="15" fill="rgb(229,93,14)" fg:x="47254" fg:w="228"/><text x="98.5014%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (208 samples, 0.43%)</title><rect x="98.2930%" y="69" width="0.4325%" height="15" fill="rgb(209,67,49)" fg:x="47274" fg:w="208"/><text x="98.5430%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (88 samples, 0.18%)</title><rect x="98.5425%" y="53" width="0.1830%" height="15" fill="rgb(213,87,29)" fg:x="47394" fg:w="88"/><text x="98.7925%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (29 samples, 0.06%)</title><rect x="98.6651%" y="37" width="0.0603%" height="15" fill="rgb(205,151,52)" fg:x="47453" fg:w="29"/><text x="98.9151%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (7 samples, 0.01%)</title><rect x="98.7296%" y="101" width="0.0146%" height="15" fill="rgb(253,215,39)" fg:x="47484" fg:w="7"/><text x="98.9796%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.01%)</title><rect x="98.7462%" y="101" width="0.0125%" height="15" fill="rgb(221,220,41)" fg:x="47492" fg:w="6"/><text x="98.9962%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_type_malloc (11 samples, 0.02%)</title><rect x="98.7587%" y="101" width="0.0229%" height="15" fill="rgb(218,133,21)" fg:x="47498" fg:w="11"/><text x="99.0087%" y="111.50"></text></g><g><title>cloud-gateway`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_keep_alive (387 samples, 0.80%)</title><rect x="97.9977%" y="133" width="0.8047%" height="15" fill="rgb(221,193,43)" fg:x="47132" fg:w="387"/><text x="98.2477%" y="143.50"></text></g><g><title>cloud-gateway`hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_read_from_io (373 samples, 0.78%)</title><rect x="98.0268%" y="117" width="0.7755%" height="15" fill="rgb(240,128,52)" fg:x="47146" fg:w="373"/><text x="98.2768%" y="127.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (10 samples, 0.02%)</title><rect x="98.7816%" y="101" width="0.0208%" height="15" fill="rgb(253,114,12)" fg:x="47509" fg:w="10"/><text x="99.0316%" y="111.50"></text></g><g><title>cloud-gateway`core::fmt::num::_&lt;impl core::fmt::UpperHex for i64&gt;::fmt (18 samples, 0.04%)</title><rect x="98.8273%" y="85" width="0.0374%" height="15" fill="rgb(215,223,47)" fg:x="47531" fg:w="18"/><text x="99.0773%" y="95.50"></text></g><g><title>cloud-gateway`core::fmt::Formatter::pad_integral::write_prefix (6 samples, 0.01%)</title><rect x="98.9188%" y="53" width="0.0125%" height="15" fill="rgb(248,225,23)" fg:x="47575" fg:w="6"/><text x="99.1688%" y="63.50"></text></g><g><title>cloud-gateway`core::fmt::num::_&lt;impl core::fmt::UpperHex for i64&gt;::fmt (22 samples, 0.05%)</title><rect x="98.8980%" y="69" width="0.0457%" height="15" fill="rgb(250,108,0)" fg:x="47565" fg:w="22"/><text x="99.1480%" y="79.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (6 samples, 0.01%)</title><rect x="98.9313%" y="53" width="0.0125%" height="15" fill="rgb(228,208,7)" fg:x="47581" fg:w="6"/><text x="99.1813%" y="63.50"></text></g><g><title>cloud-gateway`hyper::proto::h1::encode::ChunkSize::new (65 samples, 0.14%)</title><rect x="98.8169%" y="101" width="0.1351%" height="15" fill="rgb(244,45,10)" fg:x="47526" fg:w="65"/><text x="99.0669%" y="111.50"></text></g><g><title>cloud-gateway`core::fmt::write (42 samples, 0.09%)</title><rect x="98.8647%" y="85" width="0.0873%" height="15" fill="rgb(207,125,25)" fg:x="47549" fg:w="42"/><text x="99.1147%" y="95.50"></text></g><g><title>cloud-gateway`hyper::proto::h1::encode::Encoder::encode_and_end (78 samples, 0.16%)</title><rect x="98.8065%" y="117" width="0.1622%" height="15" fill="rgb(210,195,18)" fg:x="47521" fg:w="78"/><text x="99.0565%" y="127.50"></text></g><g><title>cloud-gateway`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::write_body_and_end (82 samples, 0.17%)</title><rect x="98.8024%" y="133" width="0.1705%" height="15" fill="rgb(249,80,12)" fg:x="47519" fg:w="82"/><text x="99.0524%" y="143.50"></text></g><g><title>cloud-gateway`&lt;http::header::map::Drain&lt;T&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.03%)</title><rect x="99.2847%" y="101" width="0.0312%" height="15" fill="rgb(221,65,9)" fg:x="47751" fg:w="15"/><text x="99.5347%" y="111.50"></text></g><g><title>cloud-gateway`hyper::common::date::extend (9 samples, 0.02%)</title><rect x="99.3159%" y="101" width="0.0187%" height="15" fill="rgb(235,49,36)" fg:x="47766" fg:w="9"/><text x="99.5659%" y="111.50"></text></g><g><title>cloud-gateway`&lt;hyper::proto::h1::role::Server as hyper::proto::h1::Http1Transaction&gt;::encode (170 samples, 0.35%)</title><rect x="98.9999%" y="117" width="0.3535%" height="15" fill="rgb(225,32,20)" fg:x="47614" fg:w="170"/><text x="99.2499%" y="127.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (9 samples, 0.02%)</title><rect x="99.3347%" y="101" width="0.0187%" height="15" fill="rgb(215,141,46)" fg:x="47775" fg:w="9"/><text x="99.5847%" y="111.50"></text></g><g><title>cloud-gateway`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::write_head (203 samples, 0.42%)</title><rect x="98.9729%" y="133" width="0.4221%" height="15" fill="rgb(250,160,47)" fg:x="47601" fg:w="203"/><text x="99.2229%" y="143.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (9 samples, 0.02%)</title><rect x="99.3762%" y="117" width="0.0187%" height="15" fill="rgb(216,222,40)" fg:x="47795" fg:w="9"/><text x="99.6262%" y="127.50"></text></g><g><title>cloud-gateway`hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_flush (5 samples, 0.01%)</title><rect x="99.4053%" y="133" width="0.0104%" height="15" fill="rgb(234,217,39)" fg:x="47809" fg:w="5"/><text x="99.6553%" y="143.50"></text></g><g><title>cloud-gateway`hyper::proto::h1::io::WriteBuf&lt;B&gt;::can_buffer (5 samples, 0.01%)</title><rect x="99.4178%" y="133" width="0.0104%" height="15" fill="rgb(207,178,40)" fg:x="47815" fg:w="5"/><text x="99.6678%" y="143.50"></text></g><g><title>cloud-gateway`std::sys::pal::unix::time::Timespec::now (5 samples, 0.01%)</title><rect x="99.4282%" y="133" width="0.0104%" height="15" fill="rgb(221,136,13)" fg:x="47820" fg:w="5"/><text x="99.6782%" y="143.50"></text></g><g><title>cloud-gateway`tokio::sync::batch_semaphore::Semaphore::release (8 samples, 0.02%)</title><rect x="99.4511%" y="133" width="0.0166%" height="15" fill="rgb(249,199,10)" fg:x="47831" fg:w="8"/><text x="99.7011%" y="143.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (10 samples, 0.02%)</title><rect x="99.4677%" y="133" width="0.0208%" height="15" fill="rgb(249,222,13)" fg:x="47839" fg:w="10"/><text x="99.7177%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`_free (15 samples, 0.03%)</title><rect x="99.4906%" y="133" width="0.0312%" height="15" fill="rgb(244,185,38)" fg:x="47850" fg:w="15"/><text x="99.7406%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (7 samples, 0.01%)</title><rect x="99.5218%" y="133" width="0.0146%" height="15" fill="rgb(236,202,9)" fg:x="47865" fg:w="7"/><text x="99.7718%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (21 samples, 0.04%)</title><rect x="99.5363%" y="133" width="0.0437%" height="15" fill="rgb(250,229,37)" fg:x="47872" fg:w="21"/><text x="99.7863%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_try_free_default (15 samples, 0.03%)</title><rect x="99.5842%" y="133" width="0.0312%" height="15" fill="rgb(206,174,23)" fg:x="47895" fg:w="15"/><text x="99.8342%" y="143.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (54 samples, 0.11%)</title><rect x="99.6153%" y="133" width="0.1123%" height="15" fill="rgb(211,33,43)" fg:x="47910" fg:w="54"/><text x="99.8653%" y="143.50"></text></g><g><title>cloud-gateway`hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_catch (35,043 samples, 72.86%)</title><rect x="26.8697%" y="149" width="72.8620%" height="15" fill="rgb(245,58,50)" fg:x="12923" fg:w="35043"/><text x="27.1197%" y="159.50">cloud-gateway`hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_catch</text></g><g><title>libsystem_malloc.dylib`_free (10 samples, 0.02%)</title><rect x="99.7359%" y="149" width="0.0208%" height="15" fill="rgb(244,68,36)" fg:x="47968" fg:w="10"/><text x="99.9859%" y="159.50"></text></g><g><title>cloud-gateway`cloud_gateway::main::_{{closure}}::_{{closure}} (35,166 samples, 73.12%)</title><rect x="26.6431%" y="165" width="73.1178%" height="15" fill="rgb(232,229,15)" fg:x="12814" fg:w="35166"/><text x="26.8931%" y="175.50">cloud-gateway`cloud_gateway::main::_{{closure}}::_{{closure}}</text></g><g><title>cloud-gateway`hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_catch (11 samples, 0.02%)</title><rect x="99.7609%" y="165" width="0.0229%" height="15" fill="rgb(254,30,23)" fg:x="47980" fg:w="11"/><text x="100.0109%" y="175.50"></text></g><g><title>cloud-gateway`tokio::runtime::task::core::Core&lt;T,S&gt;::poll (35,205 samples, 73.20%)</title><rect x="26.6265%" y="181" width="73.1989%" height="15" fill="rgb(235,160,14)" fg:x="12806" fg:w="35205"/><text x="26.8765%" y="191.50">cloud-gateway`tokio::runtime::task::core::Core&lt;T,S&gt;::poll</text></g><g><title>libdyld.dylib`tlv_get_addr (20 samples, 0.04%)</title><rect x="99.7838%" y="165" width="0.0416%" height="15" fill="rgb(212,155,44)" fg:x="47991" fg:w="20"/><text x="100.0338%" y="175.50"></text></g><g><title>cloud-gateway`tokio::runtime::task::core::TaskIdGuard::enter (10 samples, 0.02%)</title><rect x="99.8253%" y="181" width="0.0208%" height="15" fill="rgb(226,2,50)" fg:x="48011" fg:w="10"/><text x="100.0753%" y="191.50"></text></g><g><title>cloud-gateway`tokio::runtime::task::state::State::transition_to_idle (7 samples, 0.01%)</title><rect x="99.8461%" y="181" width="0.0146%" height="15" fill="rgb(234,177,6)" fg:x="48021" fg:w="7"/><text x="100.0961%" y="191.50"></text></g><g><title>cloud-gateway`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (35,239 samples, 73.27%)</title><rect x="26.6015%" y="197" width="73.2696%" height="15" fill="rgb(217,24,9)" fg:x="12794" fg:w="35239"/><text x="26.8515%" y="207.50">cloud-gateway`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>cloud-gateway`tokio::runtime::task::state::State::transition_to_running (5 samples, 0.01%)</title><rect x="99.8607%" y="181" width="0.0104%" height="15" fill="rgb(220,13,46)" fg:x="48028" fg:w="5"/><text x="100.1107%" y="191.50"></text></g><g><title>cloud-gateway`tokio::runtime::task::state::State::transition_to_running (10 samples, 0.02%)</title><rect x="99.8711%" y="197" width="0.0208%" height="15" fill="rgb(239,221,27)" fg:x="48033" fg:w="10"/><text x="100.1211%" y="207.50"></text></g><g><title>cloud-gateway`tokio::runtime::scheduler::multi_thread::worker::Context::run_task (36,838 samples, 76.59%)</title><rect x="23.2997%" y="213" width="76.5942%" height="15" fill="rgb(222,198,25)" fg:x="11206" fg:w="36838"/><text x="23.5497%" y="223.50">cloud-gateway`tokio::runtime::scheduler::multi_thread::worker::Context::run_task</text></g><g><title>cloud-gateway`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (5 samples, 0.01%)</title><rect x="99.8940%" y="213" width="0.0104%" height="15" fill="rgb(211,99,13)" fg:x="48044" fg:w="5"/><text x="100.1440%" y="223.50"></text></g><g><title>cloud-gateway`tokio::runtime::task::raw::poll (5 samples, 0.01%)</title><rect x="99.9044%" y="213" width="0.0104%" height="15" fill="rgb(232,111,31)" fg:x="48049" fg:w="5"/><text x="100.1544%" y="223.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (16 samples, 0.03%)</title><rect x="99.9148%" y="213" width="0.0333%" height="15" fill="rgb(245,82,37)" fg:x="48054" fg:w="16"/><text x="100.1648%" y="223.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (9 samples, 0.02%)</title><rect x="99.9480%" y="213" width="0.0187%" height="15" fill="rgb(227,149,46)" fg:x="48070" fg:w="9"/><text x="100.1980%" y="223.50"></text></g><g><title>cloud-gateway`tokio::runtime::scheduler::multi_thread::worker::Context::run (48,033 samples, 99.87%)</title><rect x="0.1123%" y="229" width="99.8711%" height="15" fill="rgb(218,36,50)" fg:x="54" fg:w="48033"/><text x="0.3623%" y="239.50">cloud-gateway`tokio::runtime::scheduler::multi_thread::worker::Context::run</text></g><g><title>libsystem_m.dylib`pow (8 samples, 0.02%)</title><rect x="99.9667%" y="213" width="0.0166%" height="15" fill="rgb(226,80,48)" fg:x="48079" fg:w="8"/><text x="100.2167%" y="223.50"></text></g><g><title>all (48,095 samples, 100%)</title><rect x="0.0000%" y="405" width="100.0000%" height="15" fill="rgb(238,224,15)" fg:x="0" fg:w="48095"/><text x="0.2500%" y="415.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (48,092 samples, 99.99%)</title><rect x="0.0062%" y="389" width="99.9938%" height="15" fill="rgb(241,136,10)" fg:x="3" fg:w="48092"/><text x="0.2562%" y="399.50">libsystem_pthread.dylib`thread_start</text></g><g><title>libsystem_pthread.dylib`_pthread_start (48,092 samples, 99.99%)</title><rect x="0.0062%" y="373" width="99.9938%" height="15" fill="rgb(208,32,45)" fg:x="3" fg:w="48092"/><text x="0.2562%" y="383.50">libsystem_pthread.dylib`_pthread_start</text></g><g><title>cloud-gateway`std::sys::pal::unix::thread::Thread::new::thread_start (48,092 samples, 99.99%)</title><rect x="0.0062%" y="357" width="99.9938%" height="15" fill="rgb(207,135,9)" fg:x="3" fg:w="48092"/><text x="0.2562%" y="367.50">cloud-gateway`std::sys::pal::unix::thread::Thread::new::thread_start</text></g><g><title>cloud-gateway`core::ops::function::FnOnce::call_once{{vtable.shim}} (48,092 samples, 99.99%)</title><rect x="0.0062%" y="341" width="99.9938%" height="15" fill="rgb(206,86,44)" fg:x="3" fg:w="48092"/><text x="0.2562%" y="351.50">cloud-gateway`core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>cloud-gateway`std::sys::backtrace::__rust_begin_short_backtrace (48,092 samples, 99.99%)</title><rect x="0.0062%" y="325" width="99.9938%" height="15" fill="rgb(245,177,15)" fg:x="3" fg:w="48092"/><text x="0.2562%" y="335.50">cloud-gateway`std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>cloud-gateway`tokio::runtime::blocking::pool::Inner::run (48,092 samples, 99.99%)</title><rect x="0.0062%" y="309" width="99.9938%" height="15" fill="rgb(206,64,50)" fg:x="3" fg:w="48092"/><text x="0.2562%" y="319.50">cloud-gateway`tokio::runtime::blocking::pool::Inner::run</text></g><g><title>cloud-gateway`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (48,092 samples, 99.99%)</title><rect x="0.0062%" y="293" width="99.9938%" height="15" fill="rgb(234,36,40)" fg:x="3" fg:w="48092"/><text x="0.2562%" y="303.50">cloud-gateway`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>cloud-gateway`tokio::runtime::task::core::Core&lt;T,S&gt;::poll (48,092 samples, 99.99%)</title><rect x="0.0062%" y="277" width="99.9938%" height="15" fill="rgb(213,64,8)" fg:x="3" fg:w="48092"/><text x="0.2562%" y="287.50">cloud-gateway`tokio::runtime::task::core::Core&lt;T,S&gt;::poll</text></g><g><title>cloud-gateway`tokio::runtime::scheduler::multi_thread::worker::run (48,092 samples, 99.99%)</title><rect x="0.0062%" y="261" width="99.9938%" height="15" fill="rgb(210,75,36)" fg:x="3" fg:w="48092"/><text x="0.2562%" y="271.50">cloud-gateway`tokio::runtime::scheduler::multi_thread::worker::run</text></g><g><title>cloud-gateway`tokio::runtime::context::runtime::enter_runtime (48,092 samples, 99.99%)</title><rect x="0.0062%" y="245" width="99.9938%" height="15" fill="rgb(229,88,21)" fg:x="3" fg:w="48092"/><text x="0.2562%" y="255.50">cloud-gateway`tokio::runtime::context::runtime::enter_runtime</text></g><g><title>libsystem_m.dylib`pow (6 samples, 0.01%)</title><rect x="99.9875%" y="229" width="0.0125%" height="15" fill="rgb(252,204,47)" fg:x="48089" fg:w="6"/><text x="100.2375%" y="239.50"></text></g></svg></svg>